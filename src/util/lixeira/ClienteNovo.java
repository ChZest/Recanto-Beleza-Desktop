package util.lixeira;

import java.awt.Color;
import java.awt.Toolkit;
import java.awt.Image;
import java.net.URL;
import java.text.ParseException;
import javax.swing.border.LineBorder;
import javax.swing.text.DefaultFormatterFactory;
import javax.swing.text.MaskFormatter;
import util.DateParse;
import util.DateParse;

/**
 * @author BIC-Jr Guia de Estilo
 */
public class ClienteNovo extends javax.swing.JDialog {

    private String nome = null;
    public ClienteNovo(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        alterarIcone();
        this.setLocationRelativeTo(null);
    }
    
    public String getCliente() {
        return nome;
    }
    
    private void alterarIcone() {
        URL url = this.getClass().getResource("/imagens/usuarioNovo.png");
        Image iconeTitulo = Toolkit.getDefaultToolkit().getImage(url);
        this.setIconImage(iconeTitulo);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        painelFormulario = new javax.swing.JPanel();
        painelDadosPessoais = new javax.swing.JPanel();
        rotuloNomeCompleto = new javax.swing.JLabel();
        campoNomeCompleto = new javax.swing.JTextField();
        rotuloDataDeNascimento = new javax.swing.JLabel();
        campoDataDeNascimento = new javax.swing.JFormattedTextField();
        painelSexo = new javax.swing.JPanel();
        radioFeminino = new javax.swing.JRadioButton();
        radioMasculino = new javax.swing.JRadioButton();
        campoCPF = new javax.swing.JFormattedTextField();
        rotuloCPF = new javax.swing.JLabel();
        rotuloRG = new javax.swing.JLabel();
        campoRG = new javax.swing.JTextField();
        rotuloTelefone = new javax.swing.JLabel();
        campoTelefone = new javax.swing.JFormattedTextField();
        rotuloEmail = new javax.swing.JLabel();
        campoEmail = new javax.swing.JTextField();
        rotuloSenha = new javax.swing.JLabel();
        campoSenha = new javax.swing.JPasswordField();
        rotuloConfirmarSenha = new javax.swing.JLabel();
        campoConfirmarSenha = new javax.swing.JPasswordField();
        painelEndereco = new javax.swing.JPanel();
        rotuloRua = new javax.swing.JLabel();
        campoRua = new javax.swing.JTextField();
        rotuloNumero = new javax.swing.JLabel();
        rotuloComplemento = new javax.swing.JLabel();
        campoComplemento = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        campoBairro = new javax.swing.JTextField();
        rotuloCEP = new javax.swing.JLabel();
        comboBoxCidade = new javax.swing.JComboBox<>();
        rotuloCidade = new javax.swing.JLabel();
        campoCEP = new javax.swing.JFormattedTextField();
        campoNumero = new javax.swing.JTextField();
        botaoCancelar = new javax.swing.JButton();
        botaoSalvar = new javax.swing.JButton();
        painelTitulo = new javax.swing.JPanel();
        rotuloNovoCliente = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro de Cliente");
        setMinimumSize(new java.awt.Dimension(610, 760));
        setResizable(false);

        jScrollPane1.setBorder(null);

        painelFormulario.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        painelDadosPessoais.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Dados Pessoais", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 14))); // NOI18N
        painelDadosPessoais.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        painelDadosPessoais.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        rotuloNomeCompleto.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        rotuloNomeCompleto.setText("Nome Completo:*");
        painelDadosPessoais.add(rotuloNomeCompleto, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        campoNomeCompleto.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        campoNomeCompleto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                campoNomeCompletoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                campoNomeCompletoFocusLost(evt);
            }
        });
        painelDadosPessoais.add(campoNomeCompleto, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 340, 30));

        rotuloDataDeNascimento.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        rotuloDataDeNascimento.setText("Data de Nascimento:*");
        painelDadosPessoais.add(rotuloDataDeNascimento, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, -1, -1));

        campoDataDeNascimento.setForeground(java.awt.Color.gray);
        campoDataDeNascimento.setText("dd/mm/aaaa");
        campoDataDeNascimento.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        campoDataDeNascimento.setPreferredSize(null);
        campoDataDeNascimento.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                campoDataDeNascimentoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                campoDataDeNascimentoFocusLost(evt);
            }
        });
        painelDadosPessoais.add(campoDataDeNascimento, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 260, 30));

        painelSexo.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Sexo*", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 14))); // NOI18N
        painelSexo.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        buttonGroup1.add(radioFeminino);
        radioFeminino.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        radioFeminino.setText("Feminino");
        painelSexo.add(radioFeminino, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        buttonGroup1.add(radioMasculino);
        radioMasculino.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        radioMasculino.setText("Masculino");
        radioMasculino.setToolTipText("");
        painelSexo.add(radioMasculino, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 20, -1, -1));

        painelDadosPessoais.add(painelSexo, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 20, 190, 50));

        campoCPF.setForeground(java.awt.Color.gray);
        campoCPF.setText("000.000.000-00");
        campoCPF.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        campoCPF.setPreferredSize(null);
        campoCPF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                campoCPFFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                campoCPFFocusLost(evt);
            }
        });
        painelDadosPessoais.add(campoCPF, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 110, 260, 30));

        rotuloCPF.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        rotuloCPF.setText("CPF:*");
        painelDadosPessoais.add(rotuloCPF, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 90, -1, -1));

        rotuloRG.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        rotuloRG.setText("RG:*");
        painelDadosPessoais.add(rotuloRG, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, -1, -1));

        campoRG.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        campoRG.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                campoRGFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                campoRGFocusLost(evt);
            }
        });
        painelDadosPessoais.add(campoRG, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, 260, 30));

        rotuloTelefone.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        rotuloTelefone.setText("Telefone:*");
        painelDadosPessoais.add(rotuloTelefone, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 160, -1, -1));

        campoTelefone.setForeground(java.awt.Color.gray);
        campoTelefone.setText("(00)00000-0000");
        campoTelefone.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        campoTelefone.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                campoTelefoneFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                campoTelefoneFocusLost(evt);
            }
        });
        painelDadosPessoais.add(campoTelefone, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 180, 260, 30));

        rotuloEmail.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        rotuloEmail.setText("E-mail:*");
        painelDadosPessoais.add(rotuloEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 230, -1, -1));

        campoEmail.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        campoEmail.setForeground(java.awt.Color.gray);
        campoEmail.setText("nome@exemplo.com");
        campoEmail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                campoEmailFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                campoEmailFocusLost(evt);
            }
        });
        painelDadosPessoais.add(campoEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 250, 540, 30));

        rotuloSenha.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        rotuloSenha.setText("Senha:*");
        painelDadosPessoais.add(rotuloSenha, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 300, -1, -1));

        campoSenha.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        campoSenha.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                campoSenhaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                campoSenhaFocusLost(evt);
            }
        });
        painelDadosPessoais.add(campoSenha, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 320, 260, 30));

        rotuloConfirmarSenha.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        rotuloConfirmarSenha.setText("Confirmar Senha:*");
        painelDadosPessoais.add(rotuloConfirmarSenha, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 300, -1, -1));

        campoConfirmarSenha.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                campoConfirmarSenhaFocusLost(evt);
            }
        });
        painelDadosPessoais.add(campoConfirmarSenha, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 320, 260, 30));

        painelFormulario.add(painelDadosPessoais, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 580, 370));

        painelEndereco.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Endereço", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 14))); // NOI18N
        painelEndereco.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        painelEndereco.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        rotuloRua.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        rotuloRua.setText("Rua:*");
        painelEndereco.add(rotuloRua, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        campoRua.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        campoRua.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                campoRuaFocusLost(evt);
            }
        });
        painelEndereco.add(campoRua, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 260, 30));

        rotuloNumero.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        rotuloNumero.setText("Número:*");
        painelEndereco.add(rotuloNumero, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 20, -1, -1));

        rotuloComplemento.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        rotuloComplemento.setText("Complemento:");
        painelEndereco.add(rotuloComplemento, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, -1, -1));

        campoComplemento.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        painelEndereco.add(campoComplemento, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 260, 30));

        jLabel13.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel13.setText("Bairro:*");
        painelEndereco.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 90, -1, -1));

        campoBairro.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        campoBairro.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                campoBairroFocusLost(evt);
            }
        });
        painelEndereco.add(campoBairro, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 110, 260, 30));

        rotuloCEP.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        rotuloCEP.setText("CEP:*");
        painelEndereco.add(rotuloCEP, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, -1, -1));

        comboBoxCidade.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        comboBoxCidade.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Timóteo", "Coronel Fabriciano", "Ipatinga" }));
        painelEndereco.add(comboBoxCidade, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 180, 260, 30));

        rotuloCidade.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        rotuloCidade.setText("Cidade:");
        painelEndereco.add(rotuloCidade, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 160, -1, -1));

        campoCEP.setForeground(java.awt.Color.gray);
        campoCEP.setText("00.000-000");
        campoCEP.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        campoCEP.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                campoCEPFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                campoCEPFocusLost(evt);
            }
        });
        painelEndereco.add(campoCEP, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, 260, 30));

        campoNumero.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        campoNumero.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        campoNumero.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                campoNumeroFocusLost(evt);
            }
        });
        painelEndereco.add(campoNumero, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 40, 260, 30));

        painelFormulario.add(painelEndereco, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 390, 580, 230));

        botaoCancelar.setBackground(new java.awt.Color(135, 206, 235));
        botaoCancelar.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        botaoCancelar.setMnemonic('c');
        botaoCancelar.setText("Cancelar");
        botaoCancelar.setContentAreaFilled(false);
        botaoCancelar.setOpaque(true);
        botaoCancelar.setPreferredSize(new java.awt.Dimension(130, 35));
        botaoCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoCancelarActionPerformed(evt);
            }
        });
        painelFormulario.add(botaoCancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 630, 130, 30));

        botaoSalvar.setBackground(new java.awt.Color(46, 139, 87));
        botaoSalvar.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        botaoSalvar.setMnemonic('s');
        botaoSalvar.setText("Salvar");
        botaoSalvar.setContentAreaFilled(false);
        botaoSalvar.setOpaque(true);
        botaoSalvar.setPreferredSize(new java.awt.Dimension(130, 35));
        botaoSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoSalvarActionPerformed(evt);
            }
        });
        painelFormulario.add(botaoSalvar, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 630, 130, 30));

        jScrollPane1.setViewportView(painelFormulario);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        painelTitulo.setBackground(new java.awt.Color(0, 0, 0));

        rotuloNovoCliente.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        rotuloNovoCliente.setForeground(new java.awt.Color(255, 255, 255));
        rotuloNovoCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/usuarioNovo.png"))); // NOI18N
        rotuloNovoCliente.setText("NOVO CLIENTE");
        painelTitulo.add(rotuloNovoCliente);

        getContentPane().add(painelTitulo, java.awt.BorderLayout.NORTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void campoNomeCompletoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoNomeCompletoFocusLost
        validaNome();
    }//GEN-LAST:event_campoNomeCompletoFocusLost

    private void campoDataDeNascimentoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoDataDeNascimentoFocusLost
        String data = campoDataDeNascimento.getText();
        data = data.replace("/", "");
        data = data.replace("_", "");
        data = data.replace("d", "");
        data = data.replace("m", "");
        data = data.replace("a", "");
        if (data.equals("")) {
            campoDataDeNascimento.setForeground(Color.GRAY);
            campoDataDeNascimento.setFormatterFactory(null);
            campoDataDeNascimento.setText("dd/mm/aaaa");
        }
        validaData();
    }//GEN-LAST:event_campoDataDeNascimentoFocusLost

    private void campoCPFFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoCPFFocusLost
        String cpf = campoCPF.getText();
        cpf = cpf.replace("0", "");
        cpf = cpf.replace(".", "");
        cpf = cpf.replace("-", "");
        if (cpf.equals("")) {
            campoCPF.setForeground(Color.GRAY);
            campoCPF.setFormatterFactory(null);
            campoCPF.setText("000.000.000-00");
        }
        validaCpf();
    }//GEN-LAST:event_campoCPFFocusLost

    private void campoRGFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoRGFocusLost
        validaRg();
    }//GEN-LAST:event_campoRGFocusLost

    private void campoTelefoneFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoTelefoneFocusLost
        String telefone = campoTelefone.getText();
        telefone = telefone.replace("0", "");
        telefone = telefone.replace("-", "");
        telefone = telefone.replace("(", "");
        telefone = telefone.replace(")", "");
        if (telefone.equals("")) {
            campoTelefone.setForeground(Color.GRAY);
            campoTelefone.setFormatterFactory(null);
            campoTelefone.setText("(00)00000-0000");
        }
        validaTelefone();
    }//GEN-LAST:event_campoTelefoneFocusLost

    private void campoEmailFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoEmailFocusLost
        validaEmail();
    }//GEN-LAST:event_campoEmailFocusLost

    private void campoSenhaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoSenhaFocusLost
        validaSenha();
    }//GEN-LAST:event_campoSenhaFocusLost

    private void campoConfirmarSenhaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoConfirmarSenhaFocusLost
        validaConfirmaSenha();
    }//GEN-LAST:event_campoConfirmarSenhaFocusLost

    private void campoRuaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoRuaFocusLost
        validaRua();
    }//GEN-LAST:event_campoRuaFocusLost

    private void campoBairroFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoBairroFocusLost
        validaBairro();
    }//GEN-LAST:event_campoBairroFocusLost

    private void campoCEPFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoCEPFocusLost
        String cep = campoCEP.getText();
        cep = cep.replace("0", "");
        cep = cep.replace("-", "");
        cep = cep.replace(".", "");
        if (cep.equals("")) {
            campoCEP.setForeground(Color.GRAY);
            campoCEP.setFormatterFactory(null);
            campoCEP.setText("00.000-000");
        } else {
            validaCep();
        }

    }//GEN-LAST:event_campoCEPFocusLost

    private void campoDataDeNascimentoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoDataDeNascimentoFocusGained
        campoDataDeNascimento.setBorder(new LineBorder(Color.BLUE));
        if (campoDataDeNascimento.getText().equals("dd/mm/aaaa")) {
            campoDataDeNascimento.setForeground(Color.BLACK);
            campoDataDeNascimento.setText("");
            try {
                MaskFormatter mascaraData = new MaskFormatter("##/##/####");
                mascaraData.setPlaceholderCharacter('_');
                campoDataDeNascimento.setFormatterFactory(new DefaultFormatterFactory(
                        mascaraData));
            } catch (ParseException e) {

            }
        }
    }//GEN-LAST:event_campoDataDeNascimentoFocusGained

    private void campoCPFFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoCPFFocusGained
        campoCPF.setBorder(new LineBorder(Color.BLUE));
        if (campoCPF.getText().equals("000.000.000-00")) {
            campoCPF.setForeground(Color.BLACK);
            campoCPF.setText("");
            try {
                MaskFormatter mascaraCpf = new MaskFormatter("###.###.###-##");
                mascaraCpf.setPlaceholderCharacter('_');
                campoCPF.setFormatterFactory(new DefaultFormatterFactory(
                        mascaraCpf));
            } catch (ParseException e) {

            }
        }
    }//GEN-LAST:event_campoCPFFocusGained

    private void campoTelefoneFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoTelefoneFocusGained
        campoTelefone.setBorder(new LineBorder(Color.BLUE));
        if (campoTelefone.getText().equals("(00)00000-0000")) {
            campoTelefone.setForeground(Color.BLACK);
            campoTelefone.setText("");
            try {
                MaskFormatter mascaraTelefone = new MaskFormatter("(##)#####-####");
                mascaraTelefone.setPlaceholderCharacter('_');
                campoTelefone.setFormatterFactory(new DefaultFormatterFactory(
                        mascaraTelefone));
            } catch (ParseException e) {

            }

        }
    }//GEN-LAST:event_campoTelefoneFocusGained

    private void campoCEPFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoCEPFocusGained
        if (campoCEP.getText().equals("00.000-000")) {
            campoCEP.setForeground(Color.BLACK);
            campoCEP.setText("");
            try {
                MaskFormatter mascaraCep = new MaskFormatter("##.###-###");
                mascaraCep.setPlaceholderCharacter('_');
                campoCEP.setFormatterFactory(new DefaultFormatterFactory(
                        mascaraCep));
            } catch (ParseException e) {

            }
        }
    }//GEN-LAST:event_campoCEPFocusGained

    private void campoNomeCompletoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoNomeCompletoFocusGained
        campoNomeCompleto.setBorder(new LineBorder(Color.BLUE));
    }//GEN-LAST:event_campoNomeCompletoFocusGained

    private void campoRGFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoRGFocusGained
        campoRG.setBorder(new LineBorder(Color.BLUE));
    }//GEN-LAST:event_campoRGFocusGained

    private void campoEmailFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoEmailFocusGained
        if (campoEmail.getText().equals("nome@exemplo.com")) {
            campoEmail.setForeground(Color.BLACK);
            campoEmail.setText("");
            campoEmail.setBorder(new LineBorder(Color.BLUE));
        }
    }//GEN-LAST:event_campoEmailFocusGained

    private void campoSenhaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoSenhaFocusGained
        if (campoSenha.getText().equals("")) {
            campoSenha.setForeground(Color.BLACK);
            campoSenha.setText("");
            campoSenha.setBorder(new LineBorder(Color.BLUE));
        }
    }//GEN-LAST:event_campoSenhaFocusGained

    private void campoNumeroFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoNumeroFocusLost
        validaNumero();
    }//GEN-LAST:event_campoNumeroFocusLost

    private void botaoCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoCancelarActionPerformed
        dispose();
    }//GEN-LAST:event_botaoCancelarActionPerformed

    private void botaoSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoSalvarActionPerformed
        if (    validaNome()
                && validaData()
                && validaCpf()
                && validaRg()
                && validaTelefone()
                && validaEmail()
                && validaSenha()
                && validaConfirmaSenha()
                && validaRua()
                && validaNumero()
                && validaBairro()
                && validaCep()) {
            nome = campoNomeCompleto.getText();
            dispose();
        }
    }//GEN-LAST:event_botaoSalvarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClienteNovo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClienteNovo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClienteNovo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClienteNovo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ClienteNovo dialog = new ClienteNovo(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    private boolean validaNome() {
        if (campoNomeCompleto.getText().length() < 3) {
            campoNomeCompleto.setBorder(new LineBorder(Color.RED));
            return false;
        } else {
            campoNomeCompleto.setBorder(new LineBorder(Color.GRAY));
            return true;
        }
    }

    private boolean validaData() {
        try {
            DateParse.parseDate(campoDataDeNascimento.getText());
            campoDataDeNascimento.setBorder(new LineBorder(Color.GRAY));
            return true;
        } catch (ParseException e) {
            campoDataDeNascimento.setBorder(new LineBorder(Color.RED));
            return false;
        }
    }

    private boolean validaCpf() {
        String cpf = campoCPF.getText();
        cpf = cpf.replace(".", "");
        cpf = cpf.replace("-", "");
        cpf = cpf.replace("_", "");
        if (cpf.trim().length() != 11) {
            campoCPF.setBorder(new LineBorder(Color.RED));
            return false;
        } else {
            campoCPF.setBorder(new LineBorder(Color.GRAY));
            return true;
        }
    }

    private boolean validaRg() {
        if (campoRG.getText().length() < 1) {
            campoRG.setBorder(new LineBorder(Color.RED));
            return false;
        } else {
            campoRG.setBorder(new LineBorder(Color.GRAY));
            return true;
        }
    }

    private boolean validaTelefone() {
        String telefone = campoTelefone.getText();
        telefone = telefone.replace(")", "");
        telefone = telefone.replace("(", "");
        telefone = telefone.replace("-", "");
        telefone = telefone.replace("_", "");
        if (telefone.trim().length() != 11) {
            campoTelefone.setBorder(new LineBorder(Color.RED));
            return false;
        } else {
            campoTelefone.setBorder(new LineBorder(Color.GRAY));
            return true;
        }
    }

    private boolean validaEmail() {
        if (campoEmail.getText().length() < 3) {
            campoEmail.setBorder(new LineBorder(Color.RED));
            return false;
        } else {
            campoEmail.setBorder(new LineBorder(Color.GRAY));
            return true;
        }
    }

    private boolean validaSenha() {
        if (campoSenha.getText().length() < 3) {
            campoSenha.setBorder(new LineBorder(Color.RED));
            return false;
        } else {
            campoSenha.setBorder(new LineBorder(Color.GRAY));
            return true;
        }
    }

    private boolean validaConfirmaSenha() {
        if (campoConfirmarSenha.getText().length() < 3 || !campoConfirmarSenha.getText().equals(campoSenha.getText())) {
            campoConfirmarSenha.setBorder(new LineBorder(Color.RED));
            return false;
        } else {
            campoConfirmarSenha.setBorder(new LineBorder(Color.GRAY));
            return true;
        }
    }

    private boolean validaRua() {
        if (campoRua.getText().length() < 3) {
            campoRua.setBorder(new LineBorder(Color.RED));
            return false;
        } else {
            campoRua.setBorder(new LineBorder(Color.GRAY));
            return true;
        }
    }

    private boolean validaNumero() {
        try {
            Integer.parseInt(campoNumero.getText());
            campoNumero.setBorder(new LineBorder(Color.GRAY));
            return true;
        } catch (NumberFormatException e) {
            campoNumero.setBorder(new LineBorder(Color.RED));
            return false;
        }
    }

    private boolean validaBairro() {
        if (campoBairro.getText().length() < 3) {
            campoBairro.setBorder(new LineBorder(Color.RED));
            return false;
        } else {
            campoBairro.setBorder(new LineBorder(Color.GRAY));
            return true;
        }
    }

    private boolean validaCep() {
        String cep = campoCEP.getText();
        cep = cep.replace(".", "");
        cep = cep.replace("-", "");
        cep = cep.replace("_", "");
        if (cep.trim().length() != 8) {
            campoCEP.setBorder(new LineBorder(Color.RED));
            return false;
        } else {
            campoCEP.setBorder(new LineBorder(Color.GRAY));
            return true;
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botaoCancelar;
    private javax.swing.JButton botaoSalvar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTextField campoBairro;
    private javax.swing.JFormattedTextField campoCEP;
    private javax.swing.JFormattedTextField campoCPF;
    private javax.swing.JTextField campoComplemento;
    private javax.swing.JPasswordField campoConfirmarSenha;
    private javax.swing.JFormattedTextField campoDataDeNascimento;
    private javax.swing.JTextField campoEmail;
    private javax.swing.JTextField campoNomeCompleto;
    private javax.swing.JTextField campoNumero;
    private javax.swing.JTextField campoRG;
    private javax.swing.JTextField campoRua;
    private javax.swing.JPasswordField campoSenha;
    private javax.swing.JFormattedTextField campoTelefone;
    private javax.swing.JComboBox<String> comboBoxCidade;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel painelDadosPessoais;
    private javax.swing.JPanel painelEndereco;
    private javax.swing.JPanel painelFormulario;
    private javax.swing.JPanel painelSexo;
    private javax.swing.JPanel painelTitulo;
    private javax.swing.JRadioButton radioFeminino;
    private javax.swing.JRadioButton radioMasculino;
    private javax.swing.JLabel rotuloCEP;
    private javax.swing.JLabel rotuloCPF;
    private javax.swing.JLabel rotuloCidade;
    private javax.swing.JLabel rotuloComplemento;
    private javax.swing.JLabel rotuloConfirmarSenha;
    private javax.swing.JLabel rotuloDataDeNascimento;
    private javax.swing.JLabel rotuloEmail;
    private javax.swing.JLabel rotuloNomeCompleto;
    private javax.swing.JLabel rotuloNovoCliente;
    private javax.swing.JLabel rotuloNumero;
    private javax.swing.JLabel rotuloRG;
    private javax.swing.JLabel rotuloRua;
    private javax.swing.JLabel rotuloSenha;
    private javax.swing.JLabel rotuloTelefone;
    // End of variables declaration//GEN-END:variables
}
